/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   export-panel.html
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.

/// <reference path="../polymer/types/polymer-element.d.ts" />
/// <reference path="../paper-styles/shadow.d.ts" />
/// <reference path="export-form.d.ts" />

declare namespace UiElements {

  /**
   * Data export panel for Advanced REST Client.
   *
   * Provides the UI and and logic to export data from the data store to `destination`
   * export method provider. It uses events API to communicate with other elements.
   *
   * Required elements to be present in the DOM:
   *
   * -   `arc-data-export` - getting data from the datastore
   * -   element that handles `file-data-save` event
   * -   element that handles `google-drive-data-save` event
   *
   * ### Example
   *
   * ```html
   * <arc-data-export app-version="12.0.0" electron-cookies></arc-data-export>
   * <google-drive-upload></google-drive-upload>
   * <file-save></file-save>
   *
   * <export-panel></export-panel>
   * ```
   *
   * ### Styling
   *
   * `<export-panel>` provides the following custom properties and mixins for styling:
   *
   * Custom property | Description | Default
   * ----------------|-------------|----------
   * `--export-panel` | Mixin applied to the element | `{}`
   * `--error-toast` | Mixin applied to the error toast message | `{}`
   * `--warning-primary-color` | Error toast background color | `#FF7043`
   * `--warning-contrast-color` | Error toast color | `#fff`
   * `--arc-font-headline` | Mixin applied to the header | `{}`
   */
  class ExportPanel extends Polymer.Element {

    /**
     * Export destination name.
     * By default it can be `file` or `drive`.
     */
    destination: string|null|undefined;

    /**
     * When set this value will be used for export file name.
     */
    fileName: string|null|undefined;
  }
}

interface HTMLElementTagNameMap {
  "export-panel": UiElements.ExportPanel;
}
